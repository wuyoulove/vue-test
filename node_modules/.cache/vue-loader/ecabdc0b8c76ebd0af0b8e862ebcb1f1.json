{"remainingRequest":"/Users/mr.wu/vueProject/vue-video-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mr.wu/vueProject/vue-video-demo/src/components/draggable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mr.wu/vueProject/vue-video-demo/src/components/draggable.vue","mtime":1608551836571},{"path":"/Users/mr.wu/vueProject/vue-video-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-video-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-video-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-video-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"Toolbar\",\n  data() {\n    return {\n      items: [\n        { key: 0, color: \"#ffebcc\" },\n        { key: 1, color: \"#ffb86c\" },\n        { key: 2, color: \"#f01b2d\" },\n        { key: 3, color: \"#f01b2f\" },\n      ],\n      items1: [\n        { key: 4, color: \"#f01b4d\" },\n        { key: 5, color: \"#f01b0d\" },\n      ],\n      dragging: null,\n    };\n  },\n  methods: {\n    handleDragStart(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd(e, item) {\n      this.dragging = null;\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter(e, item) {\n      e.dataTransfer.effectAllowed = \"move\"; //为需要移动的元素设置dragstart事件\n      if (item === this.dragging) {\n        return;\n      }\n      const newItems = JSON.parse(JSON.stringify(this.items));\n      console.log(newItems);\n      console.log(this.dragging,'this.dragging')\n      // const src = newItems.indexOf(this.dragging);\n      let src = ''\n      newItems.map(itm => {\n        if(itm.key === this.dragging.key){\n          src = itm.key\n        }\n      })\n      // const dst = newItems.indexOf(item);\n      let dst = ''\n      newItems.map(itm => {\n        if(itm.key === item.key){\n          dst = itm.key\n        }\n      })\n      console.log(src,dst,'src-dst')\n\n      newItems.splice(dst, 0, ...newItems.splice(src, 1));\n\n      this.items = newItems;\n    },\n  },\n};\n",{"version":3,"sources":["draggable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"draggable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"box\">\n  <div class=\"left\">\n    <transition-group\n    tag=\"div\"\n    class=\"container\"\n  >\n    <div\n      class=\"item\"\n      v-for=\"item in items\"\n      :key=\"item.key\"\n      :style=\"{background:item.color}\"\n      draggable=\"true\"\n      @dragstart=\"handleDragStart($event, item)\"\n      @dragover.prevent=\"handleDragOver($event, item)\"\n      @dragenter=\"handleDragEnter($event, item)\"\n      @dragend=\"handleDragEnd($event, item)\"\n    >\n    {{item.key}}\n    </div>\n  </transition-group>\n  </div>\n  <div class=\"right\">\n     <transition-group\n    tag=\"div\"\n    class=\"container\"\n  >\n    <div\n      class=\"item\"\n      v-for=\"item in items1\"\n      :key=\"item.key\"\n      :style=\"{background:item.color}\"\n      draggable=\"true\"\n      @dragstart=\"handleDragStart($event, item)\"\n      @dragover.prevent=\"handleDragOver($event, item)\"\n      @dragenter=\"handleDragEnter($event, item)\"\n      @dragend=\"handleDragEnd($event, item)\"\n    >\n    {{item.key}}\n    </div>\n  </transition-group>\n  </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Toolbar\",\n  data() {\n    return {\n      items: [\n        { key: 0, color: \"#ffebcc\" },\n        { key: 1, color: \"#ffb86c\" },\n        { key: 2, color: \"#f01b2d\" },\n        { key: 3, color: \"#f01b2f\" },\n      ],\n      items1: [\n        { key: 4, color: \"#f01b4d\" },\n        { key: 5, color: \"#f01b0d\" },\n      ],\n      dragging: null,\n    };\n  },\n  methods: {\n    handleDragStart(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd(e, item) {\n      this.dragging = null;\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter(e, item) {\n      e.dataTransfer.effectAllowed = \"move\"; //为需要移动的元素设置dragstart事件\n      if (item === this.dragging) {\n        return;\n      }\n      const newItems = JSON.parse(JSON.stringify(this.items));\n      console.log(newItems);\n      console.log(this.dragging,'this.dragging')\n      // const src = newItems.indexOf(this.dragging);\n      let src = ''\n      newItems.map(itm => {\n        if(itm.key === this.dragging.key){\n          src = itm.key\n        }\n      })\n      // const dst = newItems.indexOf(item);\n      let dst = ''\n      newItems.map(itm => {\n        if(itm.key === item.key){\n          dst = itm.key\n        }\n      })\n      console.log(src,dst,'src-dst')\n\n      newItems.splice(dst, 0, ...newItems.splice(src, 1));\n\n      this.items = newItems;\n    },\n  },\n};\n</script>\n \n<style scoped lang=\"less\">\n.box{\n  width: 100%;\n  height: 100%;\n  display: flex;\n  .left{\n    flex: 4;\n    border: 1px solid #000;\n    height: 100%;\n    .container {\n      display: flex;\n      justify-content: space-around;\n}\n  }\n  .right{\n    flex: 1;\n    border: 1px solid #000;\n    height: 100%;\n  }\n}\n.item {\n  width: 300px;\n  height: 300px;\n  text-align: center;\n  line-height: 300px;\n  color: #000;\n  font-size: 20px;\n  margin-top: 10px;\n  transition: all linear 0.3s;\n}\n</style>\n"]}]}