{"remainingRequest":"/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mr.wu/vueProject/vue-test/src/components/05-video.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mr.wu/vueProject/vue-test/src/components/05-video.vue","mtime":1598880866612},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport \"videojs-flash\";\nimport \"videojs-hotkeys\";\nexport default {\n  data() {\n    return {\n      isRTMP: true,\n      playerOptions: {\n        //playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\n        autoplay: true, //如果true,浏览器准备好时开始回放。\n        muted: false, // 默认情况下将会消除任何音频。\n        loop: false, // 导致视频一结束就重新开始。\n        preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: \"zh-CN\",\n        aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        // sources: [{\n        //     type: \"application/x-mpegURL\",\n        //     src: \"http://ivi.bupt.edu.cn/hls/cctv1hd.m3u8\" //你的m3u8地址（必填）\n        // }],\n        sources: [\n          {\n            type: \"rtmp/mp4\",\n            src: \"rtmp://58.200.131.2:1935/livetv/hunantv\",\n          },\n        ],\n        techOrder: [\"flash\", \"html5\"],\n        // poster: \"poster.jpg\", //你的封面地址\n        width: document.documentElement.clientWidth,\n        notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        // controlBar: {\n        //   timeDivider: true,\n        //   durationDisplay: true,\n        //   remainingTimeDisplay: false,\n        //   fullscreenToggle: true, //全屏按钮\n        // },\n      },\n    };\n  },\n  methods: {\n    playerStateChanged(playerCurrentState) {\n      console.log(\"example 5: state changed\", playerCurrentState);\n    },\n    playerIsReady(player) {\n      console.log(\"example 5 ready!\", player);\n      player.hotkeys({\n        volumeStep: 0.1,\n        seekStep: 5,\n        enableModifiersForNumbers: false,\n        fullscreenKey: function (event, player) {\n          // override fullscreen to trigger when pressing the F key or Ctrl+Enter\n          return event.which === 70 || (event.ctrlKey && event.which === 13);\n        },\n      });\n    },\n    switchSource() {\n      this.isRTMP = !this.isRTMP;\n      this.playerOptions.sources = this.isRTMP\n        ? [\n            {\n              type: \"rtmp/mp4\",\n              src: \"rtmp://58.200.131.2:1935/livetv/hunantv\",\n            },\n          ]\n        : [\n            {\n              type: \"video/x-flv\",\n              src: \"http://img.ksbbs.com/asset/Mon_1704/15868902d399b87.flv\",\n            },\n          ];\n    },\n  },\n};\n",{"version":3,"sources":["05-video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"05-video.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"player\">\n    <div class=\"md-subhead\">\n      <span>{{isRTMP ? 'rtmp' : 'flv'}}流播放 & 自定义hotkeys</span>\n      <button @click=\"switchSource\">切换</button>\n    </div>\n    <video-player\n      playsinline\n      class=\"vjs-custom-skin\"\n      :options=\"playerOptions\"\n      customEventName=\"changed\"\n      @ready=\"playerIsReady\"\n      @changed=\"playerStateChanged($event)\"\n    ></video-player>\n  </div>\n</template>\n\n<script>\nimport \"videojs-flash\";\nimport \"videojs-hotkeys\";\nexport default {\n  data() {\n    return {\n      isRTMP: true,\n      playerOptions: {\n        //playbackRates: [0.7, 1.0, 1.5, 2.0], //播放速度\n        autoplay: true, //如果true,浏览器准备好时开始回放。\n        muted: false, // 默认情况下将会消除任何音频。\n        loop: false, // 导致视频一结束就重新开始。\n        preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n        language: \"zh-CN\",\n        aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n        // sources: [{\n        //     type: \"application/x-mpegURL\",\n        //     src: \"http://ivi.bupt.edu.cn/hls/cctv1hd.m3u8\" //你的m3u8地址（必填）\n        // }],\n        sources: [\n          {\n            type: \"rtmp/mp4\",\n            src: \"rtmp://58.200.131.2:1935/livetv/hunantv\",\n          },\n        ],\n        techOrder: [\"flash\", \"html5\"],\n        // poster: \"poster.jpg\", //你的封面地址\n        width: document.documentElement.clientWidth,\n        notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //允许覆盖Video.js无法播放媒体源时显示的默认信息。\n        // controlBar: {\n        //   timeDivider: true,\n        //   durationDisplay: true,\n        //   remainingTimeDisplay: false,\n        //   fullscreenToggle: true, //全屏按钮\n        // },\n      },\n    };\n  },\n  methods: {\n    playerStateChanged(playerCurrentState) {\n      console.log(\"example 5: state changed\", playerCurrentState);\n    },\n    playerIsReady(player) {\n      console.log(\"example 5 ready!\", player);\n      player.hotkeys({\n        volumeStep: 0.1,\n        seekStep: 5,\n        enableModifiersForNumbers: false,\n        fullscreenKey: function (event, player) {\n          // override fullscreen to trigger when pressing the F key or Ctrl+Enter\n          return event.which === 70 || (event.ctrlKey && event.which === 13);\n        },\n      });\n    },\n    switchSource() {\n      this.isRTMP = !this.isRTMP;\n      this.playerOptions.sources = this.isRTMP\n        ? [\n            {\n              type: \"rtmp/mp4\",\n              src: \"rtmp://58.200.131.2:1935/livetv/hunantv\",\n            },\n          ]\n        : [\n            {\n              type: \"video/x-flv\",\n              src: \"http://img.ksbbs.com/asset/Mon_1704/15868902d399b87.flv\",\n            },\n          ];\n    },\n  },\n};\n</script>\n\n"]}]}