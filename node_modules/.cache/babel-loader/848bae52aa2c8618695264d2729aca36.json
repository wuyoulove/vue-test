{"remainingRequest":"/Users/mr.wu/vueProject/vue-test/node_modules/babel-loader/lib/index.js!/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mr.wu/vueProject/vue-test/src/components/draggableTest1.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mr.wu/vueProject/vue-test/src/components/draggableTest1.vue","mtime":1608638097915},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from \"vuedraggable\";\nexport default {\n  components: {\n    draggable: draggable\n  },\n  data: function data() {\n    return {\n      collections: [{\n        id: 1\n      }],\n      availableMenus: []\n    };\n  },\n  computed: {\n    notCollectedMenus: function notCollectedMenus() {\n      var _this = this;\n\n      return this.availableMenus.filter(function (menu) {\n        var collection = _this.collections.find(function (collection) {\n          return collection.menu.id === menu.id;\n        });\n\n        return collection == undefined ? true : false;\n      });\n    }\n  },\n  methods: {\n    deleteCollection: function deleteCollection(collectionToBeDeleted) {\n      var index = this.collections.findIndex(function (collection) {\n        return collection.id == collectionToBeDeleted.id;\n      });\n      this.collections.splice(index, 1);\n    },\n    addCollection: function addCollection(evt) {\n      var newCollectionIndex = evt.newIndex;\n      var menuIndex = evt.oldIndex;\n      var menu = this.notCollectedMenus[menuIndex];\n      var newCollection = {};\n      newCollection.menu = menu;\n      newCollection.username = this.username;\n      this.collections.splice(newCollectionIndex, 0, newCollection);\n    },\n    sortCollection: function sortCollection(evt) {\n      var newIndex = evt.newIndex;\n      var oldIndex = evt.oldIndex;\n      var collection = this.collections[oldIndex];\n      this.collections.splice(oldIndex, 1);\n      this.collections.splice(newIndex, 0, collection);\n    }\n  }\n};",{"version":3,"sources":["draggableTest1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,SAAA,MAAA,cAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,CAAA;AACA,QAAA,EAAA,EAAA;AADA,OAAA,CADA;AAIA,MAAA,cAAA,EAAA;AAJA,KAAA;AAMA,GAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,iBADA,+BACA;AAAA;;AACA,aAAA,KAAA,cAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,UAAA,GAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CACA,UAAA,UAAA;AAAA,iBAAA,UAAA,CAAA,IAAA,CAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,SADA,CAAA;;AAGA,eAAA,UAAA,IAAA,SAAA,GAAA,IAAA,GAAA,KAAA;AACA,OALA,CAAA;AAMA;AARA,GAZA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,qBADA,EACA;AACA,UAAA,KAAA,GAAA,KAAA,WAAA,CAAA,SAAA,CACA,UAAA,UAAA;AAAA,eAAA,UAAA,CAAA,EAAA,IAAA,qBAAA,CAAA,EAAA;AAAA,OADA,CAAA;AAGA,WAAA,WAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KANA;AAOA,IAAA,aAPA,yBAOA,GAPA,EAOA;AACA,UAAA,kBAAA,GAAA,GAAA,CAAA,QAAA;AACA,UAAA,SAAA,GAAA,GAAA,CAAA,QAAA;AAEA,UAAA,IAAA,GAAA,KAAA,iBAAA,CAAA,SAAA,CAAA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,MAAA,aAAA,CAAA,IAAA,GAAA,IAAA;AACA,MAAA,aAAA,CAAA,QAAA,GAAA,KAAA,QAAA;AACA,WAAA,WAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,aAAA;AACA,KAhBA;AAiBA,IAAA,cAjBA,0BAiBA,GAjBA,EAiBA;AACA,UAAA,QAAA,GAAA,GAAA,CAAA,QAAA;AACA,UAAA,QAAA,GAAA,GAAA,CAAA,QAAA;AAEA,UAAA,UAAA,GAAA,KAAA,WAAA,CAAA,QAAA,CAAA;AACA,WAAA,WAAA,CAAA,MAAA,CAAA,QAAA,EAAA,CAAA;AACA,WAAA,WAAA,CAAA,MAAA,CAAA,QAAA,EAAA,CAAA,EAAA,UAAA;AACA;AAxBA;AAtBA,CAAA","sourcesContent":["<template>\n  <div>\n    <div>\n      <draggable\n        :group='{name: \"menu\", put: true}'\n        @add='addCollection'\n        @update='sortCollection'\n        :value=\"collections\"\n      >\n        <div\n          v-for='collection in collections'\n          :key='collection.id'\n        >\n          <collection-item\n            @delete='deleteCollection'\n            :deletable='modified'\n            :collection='collection'\n          ></collection-item>\n        </div>\n      </draggable>\n    </div>\n    <!-- 未收藏 -->\n    <div>\n      <draggable\n        :group='{name: \"menu\", put: false}'\n        :sort='false'\n        :value=\"notCollectedMenus\"\n      >\n        <div\n          v-for='menu in notCollectedMenus'\n          :key='menu.id'\n        >\n          <menu-item :menu='menu'></menu-item>\n        </div>\n      </draggable>\n    </div>\n  </div>\n</template>\n<script>\nimport draggable from \"vuedraggable\";\nexport default {\n  components: {\n    draggable,\n  },\n  data() {\n    return {\n      collections: [{\n        id:1\n      }],\n      availableMenus: [],\n    };\n  },\n  computed: {\n    notCollectedMenus() {\n      return this.availableMenus.filter((menu) => {\n        let collection = this.collections.find(\n          (collection) => collection.menu.id === menu.id\n        );\n        return collection == undefined ? true : false;\n      });\n    },\n  },\n  methods: {\n    deleteCollection(collectionToBeDeleted) {\n      let index = this.collections.findIndex(\n        (collection) => collection.id == collectionToBeDeleted.id\n      );\n      this.collections.splice(index, 1);\n    },\n    addCollection(evt) {\n      let newCollectionIndex = evt.newIndex;\n      let menuIndex = evt.oldIndex;\n\n      let menu = this.notCollectedMenus[menuIndex];\n      let newCollection = {};\n      newCollection.menu = menu;\n      newCollection.username = this.username;\n      this.collections.splice(newCollectionIndex, 0, newCollection);\n    },\n    sortCollection(evt) {\n      let newIndex = evt.newIndex;\n      let oldIndex = evt.oldIndex;\n\n      let collection = this.collections[oldIndex];\n      this.collections.splice(oldIndex, 1);\n      this.collections.splice(newIndex, 0, collection);\n    },\n  },\n};\n</script>"],"sourceRoot":"src/components"}]}