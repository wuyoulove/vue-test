{"remainingRequest":"/Users/mr.wu/vueProject/vue-test/node_modules/babel-loader/lib/index.js!/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mr.wu/vueProject/vue-test/src/components/draggable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mr.wu/vueProject/vue-test/src/components/draggable.vue","mtime":1608714916726},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mr.wu/vueProject/vue-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/mr.wu/vueProject/vue-test/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Toolbar\",\n  data: function data() {\n    return {\n      items: [{\n        key: 0,\n        color: \"#ffebcc\"\n      }, {\n        key: 1,\n        color: \"#ffb86c\"\n      }, {\n        key: 2,\n        color: \"#f01b2d\"\n      }, {\n        key: 3,\n        color: \"#f01b2f\"\n      }],\n      items1: [{\n        key: 4,\n        color: \"#f01b4d\"\n      }, {\n        key: 5,\n        color: \"#f01b0d\"\n      }],\n      dragging: null,\n      insideDragging: null,\n      handleDragEnteritem: null,\n      handleDragEnteritem1: null\n    };\n  },\n  methods: {\n    handleDragStart: function handleDragStart(e, item) {\n      this.insideDragging = item;\n      console.log(this.insideDragging, 'insideDragging');\n    },\n    handleDragEnd: function handleDragEnd(e, item) {\n      console.log(item, 'item-------');\n\n      var newItems = _toConsumableArray(this.items);\n\n      var src = newItems.indexOf(this.insideDragging);\n      var dst = newItems.indexOf(this.handleDragEnteritem);\n\n      if (src !== -1 && dst !== -1) {\n        newItems.splice.apply(newItems, [dst, 1].concat(_toConsumableArray(newItems.splice(src, 1, this.handleDragEnteritem))));\n        this.items = newItems;\n      }\n\n      this.handleDragEnteritem = null;\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver: function handleDragOver(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter: function handleDragEnter(e, item) {\n      console.log(item, \"handleDragEnter-item\");\n      this.handleDragEnteritem = item;\n    },\n    handleDragStart1: function handleDragStart1(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd1: function handleDragEnd1(e, item) {\n      e.dataTransfer.dropEffect = \"\";\n      console.log(e, item, \"e-item\");\n\n      var newItems = _toConsumableArray(this.items);\n\n      var newItems1 = _toConsumableArray(this.items1);\n\n      console.log(newItems, newItems1);\n      console.log(this.dragging, \"this.dragging\", this.handleDragEnteritem);\n      var src = newItems1.indexOf(this.dragging);\n      var dst = newItems.indexOf(this.handleDragEnteritem);\n      console.log(src, dst, \"src-dst\");\n\n      if (src !== -1 && dst !== -1) {\n        var _this$items;\n\n        (_this$items = this.items).splice.apply(_this$items, [dst, 1].concat(_toConsumableArray(newItems1.splice(src, 1))));\n\n        this.items1.splice(src, 1, this.handleDragEnteritem); // this.items = newItems;\n      } else {\n        dst = newItems1.indexOf(this.handleDragEnteritem1);\n        console.log(dst, '---dst', src);\n        newItems1.splice.apply(newItems1, [dst, 1].concat(_toConsumableArray(newItems1.splice(src, 1, this.handleDragEnteritem1))));\n        this.items1 = newItems1;\n      }\n\n      this.dragging = null;\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver1: function handleDragOver1(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter1: function handleDragEnter1(e, item) {\n      this.handleDragEnteritem1 = item;\n    }\n  }\n};",{"version":3,"sources":["draggable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,CADA;AAOA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,CAPA;AAWA,MAAA,QAAA,EAAA,IAXA;AAYA,MAAA,cAAA,EAAA,IAZA;AAaA,MAAA,mBAAA,EAAA,IAbA;AAcA,MAAA,oBAAA,EAAA;AAdA,KAAA;AAgBA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,CADA,EACA,IADA,EACA;AACA,WAAA,cAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,cAAA,EAAA,gBAAA;AACA,KAJA;AAKA,IAAA,aALA,yBAKA,CALA,EAKA,IALA,EAKA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,aAAA;;AACA,UAAA,QAAA,sBAAA,KAAA,KAAA,CAAA;;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,OAAA,CAAA,KAAA,cAAA,CAAA;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,OAAA,CAAA,KAAA,mBAAA,CAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,IAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,MAAA,OAAA,QAAA,GAAA,GAAA,EAAA,CAAA,4BAAA,QAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,CAAA,GAAA;AACA,aAAA,KAAA,GAAA,QAAA;AACA;;AACA,WAAA,mBAAA,GAAA,IAAA;AACA,KAfA;AAgBA;AACA,IAAA,cAjBA,0BAiBA,CAjBA,EAiBA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,UAAA,GAAA,MAAA,CADA,CACA;AACA,KAnBA;AAoBA,IAAA,eApBA,2BAoBA,CApBA,EAoBA,IApBA,EAoBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,EAAA,sBAAA;AACA,WAAA,mBAAA,GAAA,IAAA;AACA,KAvBA;AAyBA,IAAA,gBAzBA,4BAyBA,CAzBA,EAyBA,IAzBA,EAyBA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KA3BA;AA4BA,IAAA,cA5BA,0BA4BA,CA5BA,EA4BA,IA5BA,EA4BA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,UAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,EAAA,QAAA;;AACA,UAAA,QAAA,sBAAA,KAAA,KAAA,CAAA;;AACA,UAAA,SAAA,sBAAA,KAAA,MAAA,CAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,SAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,QAAA,EAAA,eAAA,EAAA,KAAA,mBAAA;AACA,UAAA,GAAA,GAAA,SAAA,CAAA,OAAA,CAAA,KAAA,QAAA,CAAA;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,OAAA,CAAA,KAAA,mBAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,SAAA;;AACA,UAAA,GAAA,KAAA,CAAA,CAAA,IAAA,GAAA,KAAA,CAAA,CAAA,EAAA;AAAA;;AACA,4BAAA,KAAA,EAAA,MAAA,qBAAA,GAAA,EAAA,CAAA,4BAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,CAAA;;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,mBAAA,EAFA,CAGA;AACA,OAJA,MAIA;AACA,QAAA,GAAA,GAAA,SAAA,CAAA,OAAA,CAAA,KAAA,oBAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,QAAA,EAAA,GAAA;AACA,QAAA,SAAA,CAAA,MAAA,OAAA,SAAA,GAAA,GAAA,EAAA,CAAA,4BAAA,SAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAAA,KAAA,oBAAA,CAAA,GAAA;AACA,aAAA,MAAA,GAAA,SAAA;AACA;;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KAjDA;AAkDA;AACA,IAAA,eAnDA,2BAmDA,CAnDA,EAmDA;AACA,MAAA,CAAA,CAAA,YAAA,CAAA,UAAA,GAAA,MAAA,CADA,CACA;AACA,KArDA;AAsDA,IAAA,gBAtDA,4BAsDA,CAtDA,EAsDA,IAtDA,EAsDA;AACA,WAAA,oBAAA,GAAA,IAAA;AACA;AAxDA;AApBA,CAAA","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"left\">\n      <div\n        tag=\"div\"\n        class=\"container\"\n      >\n        <div\n          class=\"item left-item\"\n          v-for=\"item in items\"\n          :key=\"item.key\"\n          :style=\"{background:item.color}\"\n          draggable=\"true\"\n          @dragstart=\"handleDragStart($event, item)\"\n          @dragover.prevent=\"handleDragOver($event, item)\"\n          @dragenter=\"handleDragEnter($event, item)\"\n          @dragend=\"handleDragEnd($event, item)\"\n        >\n          {{item.key}}\n        </div>\n      </div>\n    </div>\n    <div class=\"right\">\n      <div\n        tag=\"div\"\n        class=\"container1\"\n      >\n        <div\n          class=\"item\"\n          v-for=\"item in items1\"\n          :key=\"item.key\"\n          :style=\"{background:item.color}\"\n          draggable=\"true\"\n          @dragstart=\"handleDragStart1($event, item)\"\n          @dragover.prevent=\"handleDragOver1($event, item)\"\n          @dragenter=\"handleDragEnter1($event, item)\"\n          @dragend=\"handleDragEnd1($event, item)\"\n        >\n          {{item.key}}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"Toolbar\",\n  data() {\n    return {\n      items: [\n        { key: 0, color: \"#ffebcc\" },\n        { key: 1, color: \"#ffb86c\" },\n        { key: 2, color: \"#f01b2d\" },\n        { key: 3, color: \"#f01b2f\" },\n      ],\n      items1: [\n        { key: 4, color: \"#f01b4d\" },\n        { key: 5, color: \"#f01b0d\" },\n      ],\n      dragging: null,\n      insideDragging:null,\n      handleDragEnteritem: null,\n      handleDragEnteritem1: null,\n    };\n  },\n  methods: {\n    handleDragStart(e, item) {\n      this.insideDragging = item;\n      console.log(this.insideDragging,'insideDragging')\n    },\n    handleDragEnd(e, item) {\n      console.log(item,'item-------')\n      const newItems = [...this.items];\n      const src = newItems.indexOf(this.insideDragging);\n      const dst = newItems.indexOf(this.handleDragEnteritem);\n      if(src !== -1 && dst !== -1){\n        newItems.splice(dst, 1, ...newItems.splice(src, 1,this.handleDragEnteritem));\n        this.items = newItems;\n      }\n      this.handleDragEnteritem = null\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter(e, item) {\n      console.log(item, \"handleDragEnter-item\");\n      this.handleDragEnteritem = item;\n    },\n\n    handleDragStart1(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd1(e, item) {\n      e.dataTransfer.dropEffect = \"\";\n      console.log(e, item, \"e-item\");\n      const newItems = [...this.items];\n      const newItems1 = [...this.items1];\n      console.log(newItems, newItems1);\n      console.log(this.dragging, \"this.dragging\", this.handleDragEnteritem);\n      const src = newItems1.indexOf(this.dragging);\n      let dst = newItems.indexOf(this.handleDragEnteritem);\n      console.log(src, dst, \"src-dst\");\n      if(src !== -1 && dst !== -1){\n        this.items.splice(dst, 1, ...newItems1.splice(src, 1));\n        this.items1.splice(src, 1, this.handleDragEnteritem);\n        // this.items = newItems;\n      }else{\n        dst = newItems1.indexOf(this.handleDragEnteritem1);\n        console.log(dst,'---dst',src)\n        newItems1.splice(dst, 1, ...newItems1.splice(src, 1,this.handleDragEnteritem1));\n        this.items1 = newItems1;\n      }\n      this.dragging = null;\n    },\n    //首先把div变成可以放置的元素，即重写dragenter/dragover\n    handleDragOver1(e) {\n      e.dataTransfer.dropEffect = \"move\"; // e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\n    },\n    handleDragEnter1(e, item) {\n       this.handleDragEnteritem1 = item;\n    },\n  },\n};\n</script>\n \n<style scoped>\n.box {\n  width: 100%;\n  height: 100%;\n  display: flex;\n}\n.left {\n  flex: 4;\n  border-right: 1px solid #cccccc;\n  height: 100%;\n}\n.left > .container {\n  /* display: flex;\n  justify-content: space-around; */\n}\n.right {\n  flex: 1;\n  /* border: 1px solid #000; */\n  height: 100%;\n}\n.item {\n  width: 300px;\n  height: 300px;\n  text-align: center;\n  line-height: 300px;\n  color: #000;\n  font-size: 20px;\n  /* margin-top: 10px; */\n  transition: all linear 0.3s;\n}\n.container{\n  /* position: relative; */\n  width: 100%;\n  height: 100%;\n}\n.left-item{\n  /* position: absolute; */\n}\n.left-item:nth-child(1){\n  /* left: 0;\n  top: 0; */\n  transform:translate(0px,0px)\n}\n.left-item:nth-child(2){\n  /* right: 0;\n  top: 0; */\n  transform:translate(1000px,-300px)\n}\n.left-item:nth-child(3){\n  /* left: 0;\n  bottom: 0; */\n  transform:translate(0px,0px)\n}\n.left-item:nth-child(4){\n  /* right: 0;\n  bottom: 0; */\n  transform:translate(1000px,-300px)\n}\n</style>\n"],"sourceRoot":"src/components"}]}